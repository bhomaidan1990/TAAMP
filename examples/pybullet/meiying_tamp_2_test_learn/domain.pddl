(define (domain pick-and-place)
  (:requirements :strips :equality)
  (:predicates
    (Stackable ?o ?r)
    (Sink ?o)
    (Stove ?s)
    (Movable ?o)
    (Region ?s)
    (Tool ?o)
    (Manipulanda ?o)
    (Graspable ?o)
    (Different ?o1 ?o2)
    (Floor ?f)
    (Pull ?o)

    (Pose ?o ?p)
    (ToolGoalPose ?o ?p ?to)
    (ValidGrasp ?o ?p ?q)
    (Grasp ?o ?g)
    (PullConfigKin ?o ?p1 ?p2 ?p3 ?to ?top1 ?g ?top ?q1 ?q2 ?t)
    (PullConfig ?o ?p1 ?p2 ?to ?g)
    (Kin ?o ?p1 ?p2 ?g ?q2 ?t)
    (FreeMotion ?q1 ?t ?q2)
    (HoldingMotion ?q1 ?t ?q2 ?o ?p1 ?p2 ?g)
    (Supported ?o ?p ?r)
    (Traj ?t)

    (TrajCollision ?t ?o2 ?p2)
    (CFreePosePose ?o ?p ?o2 ?p2)
    (CFreeApproachPose ?o ?p ?g ?o2 ?p2)
    (CFreeTrajPose ?t ?o2 ?p2)
    (CFreePullPose ?o ?p1 ?p2 ?to ?g ?o2 ?p22)
    (CFreePullTrajPose ?o ?to ?t ?o2 ?p2)

    (AtPose ?o ?p)
    (AtGrasp ?o ?g)
    (AtGraspPose ?o ?p ?q)
    (HandEmpty)
    (AtConf ?q)
    (CanMove)
    (Cleaned ?o)
    (Cooked ?o)

    (On ?o ?r)
    (Holding ?o)

    (UnsafePose ?o ?p)
    (UnsafeApproach ?o ?p ?g)
    (UnsafeTraj ?t)
    (UnsafePull ?o ?p1 ?p2 ?to ?g)
    (UnsafePullTraj ?o ?to ?t)

    (PickInfeasible ?o ?r ?f ?p)
    (PickFeasible ?o ?r ?f ?p)
    (PickRegion ?o ?s)

    (PlaceInfeasible ?o ?s ?r)
    (PlaceFeasible ?o ?s ?r)

    (PullFeasible ?o ?to ?p)

  )

  (:action move_free
    :parameters (?q1 ?q2 ?t)
    :precondition (and (FreeMotion ?q1 ?t ?q2)
                       (AtConf ?q1) (HandEmpty) (CanMove)
                       ;(not (UnsafeTraj ?t))
                  )
    :effect (and (AtConf ?q2)
                 (not (AtConf ?q1)) (not (CanMove)))
  )

  (:action move_holding
    :parameters (?q1 ?q2 ?o ?p1 ?p2 ?g ?t)
    :precondition (and ;(not (MoveInfeasible ?o ?p1 ?p2 ?q1 ?q2))
                       (ValidGrasp ?o ?p1 ?q1) (ValidGrasp ?o ?p2 ?q2)
                       (HoldingMotion ?q1 ?t ?q2 ?o ?p1 ?p2 ?g)
                       (AtConf ?q1) (AtGrasp ?o ?g) (CanMove)
                       ;(AtPose ?o ?p1)
                       (AtGraspPose ?o ?p1 ?q1)
                       ;(not (UnsafeTraj ?t))
                  )
    :effect (and (AtConf ?q2)
                 (not (AtConf ?q1)) (not (CanMove))
                 ;(not (AtPose ?o ?p1))
                 ;(AtPose ?o ?p2)
                 (not (AtGraspPose ?o ?p1 ?q1))
                 (AtGraspPose ?o ?p2 ?q2)
            )
  )

  (:action pick
    :parameters (?o ?r ?f ?p1 ?p2 ?g ?q ?t)
    :precondition (and (PickFeasible ?o ?r ?f ?p1)
                       (Kin ?o ?p1 ?p2 ?g ?q ?t)
                       (On ?o ?r) (Region ?r) (Floor ?f)
                       (AtPose ?o ?p1) (HandEmpty) (AtConf ?q) (Movable ?o)
                       (not (UnsafeApproach ?o ?p ?g))
                       (not (UnsafeTraj ?t))
                  )
    :effect (and (AtGrasp ?o ?g) (CanMove)
                 (not (AtPose ?o ?p1)) (not (HandEmpty))
                 ;(AtPose ?o ?p2)
                 (AtGraspPose ?o ?p2 ?q)
                 (PickRegion ?o ?r)
            )
  )

  (:action place
    :parameters (?o ?s ?r ?p1 ?p2 ?g ?q ?t)
    :precondition (and (PlaceFeasible ?o ?s ?r)
                       (PickRegion ?o ?s)
                       (Stackable ?o ?r) (Supported ?o ?p1 ?r)
                       (Kin ?o ?p1 ?p2 ?g ?q ?t)
                       (AtGrasp ?o ?g) (AtConf ?q)
                       ;(AtPose ?o ?p2)
                       (AtGraspPose ?o ?p2 ?q)
                       (not (UnsafePose ?o ?p))
                       (not (UnsafeApproach ?o ?p ?g))
                       (not (UnsafeTraj ?t))
                  )
    :effect (and (AtPose ?o ?p1) (HandEmpty) (CanMove)
                 (not (AtGrasp ?o ?g))
                 ;(not (AtPose ?o ?p2))
                 (not (AtGraspPose ?o ?p2 ?q))
                 (not (PickRegion ?o ?s))
                 )
  )

  (:action pull
    :parameters (?o ?p1 ?p2 ?p3 ?to ?top1 ?g ?q1 ?q2 ?top ?t)
    :precondition (and (AtPose ?o ?p1)
                       (PullFeasible ?o ?to ?p1)
                       (Manipulanda ?o)
                       (ToolGoalPose ?o ?p2 ?to)
                       (PullConfigKin ?o ?p1 ?p2 ?p3 ?to ?top1 ?g ?top ?q1 ?q2 ?t)
                       (AtGrasp ?to ?g)
                       (AtGraspPose ?to ?top1 ?q1)
                       (Tool ?to)
                       (AtConf ?q1)
                       (not (= ?o ?to))
                       (not (UnsafePose ?o ?p2))
                       (not (UnsafePose ?to ?top2))
                       (not (UnsafePose ?to ?top))
                       (not (UnsafePull ?o ?p1 ?p3 ?to ?g))
                       (not (UnsafePullTraj ?o ?to ?t))
                  )
    :effect (and (AtPose ?o ?p3)
                 (not (AtPose ?o ?p1))
                 (AtPose ?to ?top)
                 (not (AtGrasp ?to ?g)) (HandEmpty) (CanMove)
                 (not (AtConf ?q1))
                 (not (AtGraspPose ?to ?top1 ?q1))
                 (AtConf ?q2)
                 (Pull ?to)
            )
  )

  (:action clean
    :parameters (?o ?r)
    :precondition (and (Stackable ?o ?r) (Sink ?r)
                       (On ?o ?r))
    :effect (Cleaned ?o)
  )
  (:action cook
    :parameters (?o ?r)
    :precondition (and (Stackable ?o ?r) (Stove ?r)
                       (On ?o ?r) (Cleaned ?o))
    :effect (and (Cooked ?o)
                 (not (Cleaned ?o)))
  )

  (:derived (On ?o ?r)
    (exists (?p) (and (Supported ?o ?p ?r)
                      (AtPose ?o ?p)))
  )
  (:derived (Holding ?o)
    (exists (?g) (and (Grasp ?o ?g)
                      (AtGrasp ?o ?g)))
  )

  (:derived (UnsafePose ?o ?p)
    (exists (?o2 ?p2) (and (Pose ?o ?p) (Pose ?o2 ?p2) (not (= ?o ?o2))
                           (not (CFreePosePose ?o ?p ?o2 ?p2))
                           (AtPose ?o2 ?p2)))
  )
  (:derived (UnsafeApproach ?o ?p ?g)
    (exists (?o2 ?p2) (and (Pose ?o ?p) (Grasp ?o ?g) (Pose ?o2 ?p2) (not (= ?o ?o2))
                           (not (CFreeApproachPose ?o ?p ?g ?o2 ?p2))
                           (AtPose ?o2 ?p2)))
  )
  (:derived (UnsafeTraj ?t)
    (exists (?o2 ?p2) (and (Traj ?t) (Pose ?o2 ?p2)
                           (not (CFreeTrajPose ?t ?o2 ?p2))
                           ; (TrajCollision ?t ?o2 ?p2)
                           (AtPose ?o2 ?p2)))
  )
  (:derived (UnsafePull ?o ?p1 ?p2 ?to ?g)
    (exists (?o2 ?p22) (and (Pose ?o ?p1) (Pose ?o ?p2)
                            ;(PullConfig ?o ?p1 ?p2 ?to ?top1 ?top2 ?cg ?g)
                            ;(PullConfig ?o ?p1 ?p2 ?to ?g ?cg)
                            (PullConfig ?o ?p1 ?p2 ?to ?g)
                            (Tool ?to) (Movable ?o2) (Manipulanda ?o)
                            (Pose ?o2 ?p22) (not (= ?o ?o2)) (not (= ?o ?to)) (not (= ?o2 ?to))
                            (not (CFreePullPose ?o ?p1 ?p2 ?to ?g ?o2 ?p22))
                            (AtPose ?o2 ?p22)
                       )
    )
  )
  (:derived (UnsafePullTraj ?o ?to ?t)
    (exists (?o2 ?p2) (and (Traj ?t) (Pose ?o2 ?p2)
                           (Tool ?to) (Manipulanda ?o) (Movable ?o2)
                           (not (= ?o ?o2)) (not (= ?to ?o2)) (not (= ?o ?to))
                           (not (CFreePullTrajPose ?o ?to ?t ?o2 ?p2))
                           (AtPose ?o2 ?p2)
                      )
    )    
  )
)
